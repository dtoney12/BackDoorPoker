/*
 monopost
 Author: Jim Cowart (http://freshbrewedcode.com/jimcowart)
 License: Dual licensed MIT (http://www.opensource.org/licenses/mit-license) & GPL (http://www.opensource.org/licenses/gpl-license)
 Version 0.1.1
 */
(function(o,t){"object"==typeof module&&module.exports?module.exports=function(o,n,e){return t(o,n,e)}:"function"==typeof define&&define.amd?define(["underscore","monologue","postal"],function(n,e,i){return t(n,e,i,o)}):o.Monologue=t(o._,o.Monologue,o.postal,o)})(this,function(o,t,n){return t.prototype.goPostal=function(t,e){var i,c=t||n.configuration.DEFAULT_CHANNEL,r=e||"#",a=this.__goPostal__={};"[object String]"===Object.prototype.toString.call(t)||0===arguments.length?i=[{channel:c,topic:r}]:"object"==typeof t&&(i=o.reduce(t,function(o,t,n){return o.push({channel:t,topic:n}),o},[])),o.each(i,function(t){a[t.topic]=this.on(t.topic,function(e,i){var c=o.extend({},i,{channel:t.channel});n.publish(c)})},this)},t.prototype.goLocal=function(t){var e=this.__goLocal__={};o.each(t,function(o,t){if(!this[o])throw Error("Cannot bridge via Monologue.prototype.goLocal: Object does not contain a method named "+o+".");if(this[o]&&!e[t]){var i=t.split(" ");e[t]=n.subscribe({channel:2===i.length?i[0]:n.configuration.DEFAULT_CHANNEL,topic:2===i.length?i[1]:i[0],callback:this[o]}).withContext(this)}},this)},t});